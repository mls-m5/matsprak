#include "ast.h"

#include <fstream>
#include <iostream>
#include <sstream>

using namespace std;


int compile(string code, string outputFile){
	auto cmd = "g++ -std=c++11 -x c++ -c -o " + outputFile + " -"; //Compile to object file
//	auto cmd = "g++ -x c++ -o test -";
	cout << cmd << endl;

	FILE* pipe;
	pipe = popen(cmd.c_str(), "w");
	if (!pipe) return 1;

//	fwrite(code.c_str(), 1, code.size(), pipe ); //Todo: check if this is a good alternative
	fprintf(pipe, code.c_str());
	pclose(pipe);
}

string stripEnding(string &arg){
	if (arg.size() < 4){
		return arg;
	}
	if (arg[arg.size() - 4] == '.'){
		return arg.substr(0, arg.size() - 4);
	}
	else return arg;
}

int main(int argc, char *argv[]){
	std::vector<string> files;

	for (int i = 1; i < argc; ++i){
		string arg = argv[i];
		files.push_back(arg);
	}

	for (auto &file: files){
		stringstream ss;
		auto ast = Ast::LoadClassFile(file);
		cout << "header" << endl;
		ast->name = "Simple";
		ast->save(ss, Ast::Header);
//		ss << "};" << endl;


		cout << endl << "source: " << endl;
		ast->save(ss, Ast::Source);

		cout << ss.str();

		cout << endl << "running gcc" << endl;
		compile(ss.str(), stripEnding(file) + ".o");

		ofstream headerFile(stripEnding(file) + ".h");
		headerFile << "//Matsprak-autogenerated file" << endl;
		headerFile << "//Your changes in this file probably be owerwritten" << endl;
		ast->save(headerFile, Ast::Header);
	}
}
